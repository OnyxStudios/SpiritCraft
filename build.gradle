plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://maven.onyxstudios.dev/" }
	maven { url = "https://jitpack.io/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "dev.onyxstudios:FOML:${project.foml_version}"
	include "dev.onyxstudios:FOML:${project.foml_version}"

	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:base:${project.cca_version}"

	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cca_version}"

	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cca_version}"

	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}"

	modImplementation "com.github.emilyploszaj:trinkets:${project.trinkets_version}"
	include "com.github.emilyploszaj:trinkets:${project.trinkets_version}"

	modApi "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
